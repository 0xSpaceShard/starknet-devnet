name: Build and Publish Docker Images

on:
  workflow_run:
    workflows: ["Build and Test"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:
    inputs:
      force_version_tags:
        description: 'Force version tags regardless of version change'
        type: boolean
        default: true

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: false

jobs:
  docker-build-and-publish:
    name: Build and Publish Docker Images
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: self-hosted
    outputs:
      sha: ${{ steps.get_sha.outputs.sha }}
      version: ${{ steps.version_info.outputs.version }}
      version_changed: ${{ steps.version_info.outputs.version_changed }}
      is_rc: ${{ steps.version_info.outputs.is_rc }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Load common configuration
        id: config
        uses: ./.github/actions/load-config

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get SHA
        id: get_sha
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          echo "sha=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Get version information
        id: version_info
        uses: ./.github/actions/get-version-info
        with:
          force_version_tags: ${{ github.event.inputs.force_version_tags == 'true' || github.event_name == 'workflow_dispatch' }}
      
      - name: Prepare SHA tags
        id: sha_tags
        run: |
          DOCKER_REGISTRY="${{ steps.config.outputs.docker_registry }}"
          DOCKER_NAMESPACE="${{ steps.config.outputs.docker_namespace }}"
          IMAGE_NAME="${{ steps.config.outputs.image_name }}"
          SHA="${{ steps.get_sha.outputs.sha }}"
          
          SHA_TAG="$DOCKER_REGISTRY/$DOCKER_NAMESPACE/$IMAGE_NAME:sha-$SHA"
          SHA_SEED0_TAG="$DOCKER_REGISTRY/$DOCKER_NAMESPACE/$IMAGE_NAME:sha-$SHA-seed0"
          
          echo "sha_tag=$SHA_TAG" >> $GITHUB_OUTPUT
          echo "sha_seed0_tag=$SHA_SEED0_TAG" >> $GITHUB_OUTPUT

      - name: Prepare version tags
        id: version_tags
        if: ${{ steps.version_info.outputs.version_changed == 'true' }}
        run: |
          DOCKER_REGISTRY="${{ steps.config.outputs.docker_registry }}"
          DOCKER_NAMESPACE="${{ steps.config.outputs.docker_namespace }}"
          IMAGE_NAME="${{ steps.config.outputs.image_name }}"
          VERSION="${{ steps.version_info.outputs.version }}"
          
          VERSION_TAG="$DOCKER_REGISTRY/$DOCKER_NAMESPACE/$IMAGE_NAME:$VERSION"
          VERSION_SEED0_TAG="$DOCKER_REGISTRY/$DOCKER_NAMESPACE/$IMAGE_NAME:$VERSION-seed0"
          
          echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT
          echo "version_seed0_tag=$VERSION_SEED0_TAG" >> $GITHUB_OUTPUT
      
      - name: Prepare latest tags
        id: latest_tags
        if: ${{ steps.version_info.outputs.version_changed == 'true' && steps.version_info.outputs.is_rc == 'false' }}
        run: |
          DOCKER_REGISTRY="${{ steps.config.outputs.docker_registry }}"
          DOCKER_NAMESPACE="${{ steps.config.outputs.docker_namespace }}"
          IMAGE_NAME="${{ steps.config.outputs.image_name }}"
          
          LATEST_TAG="$DOCKER_REGISTRY/$DOCKER_NAMESPACE/$IMAGE_NAME:latest"
          LATEST_SEED0_TAG="$DOCKER_REGISTRY/$DOCKER_NAMESPACE/$IMAGE_NAME:latest-seed0"
          
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "latest_seed0_tag=$LATEST_SEED0_TAG" >> $GITHUB_OUTPUT
          
      - name: Combine tags for standard image
        id: combined_tags
        run: |
          TAGS=("${{ steps.sha_tags.outputs.sha_tag }}")
          
          if [[ -n "${{ steps.version_tags.outputs.version_tag }}" ]]; then
            TAGS+=("${{ steps.version_tags.outputs.version_tag }}")
          fi
          
          if [[ -n "${{ steps.latest_tags.outputs.latest_tag }}" ]]; then
            TAGS+=("${{ steps.latest_tags.outputs.latest_tag }}")
          fi
          
          echo "tags=$(IFS=,; echo "${TAGS[*]}")" >> $GITHUB_OUTPUT

      - name: Combine tags for seed0 image
        id: combined_seed0_tags
        run: |
          SEED0_TAGS=("${{ steps.sha_tags.outputs.sha_seed0_tag }}")
          
          if [[ -n "${{ steps.version_tags.outputs.version_seed0_tag }}" ]]; then
            SEED0_TAGS+=("${{ steps.version_tags.outputs.version_seed0_tag }}")
          fi
          
          if [[ -n "${{ steps.latest_tags.outputs.latest_seed0_tag }}" ]]; then
            SEED0_TAGS+=("${{ steps.latest_tags.outputs.latest_seed0_tag }}")
          fi
          
          echo "tags=$(IFS=,; echo "${SEED0_TAGS[*]}")" >> $GITHUB_OUTPUT

      - name: Build and publish standard Docker image
        id: build_standard
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.combined_tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and publish seed0 Docker image
        id: build_seed0
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/seed0.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.combined_seed0_tags.outputs.tags }}
          build-args: |
            BASE_IMAGE=${{ steps.config.outputs.docker_registry }}/${{ steps.config.outputs.docker_namespace }}/${{ steps.config.outputs.image_name }}:sha-${{ steps.get_sha.outputs.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Summarize published images
        run: |
          echo "# Docker images published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Standard image tags:" >> $GITHUB_STEP_SUMMARY
          
          echo "- \`${{ steps.sha_tags.outputs.sha_tag }}\`" >> $GITHUB_STEP_SUMMARY
          
          if [[ -n "${{ steps.version_tags.outputs.version_tag }}" ]]; then
            echo "- \`${{ steps.version_tags.outputs.version_tag }}\`" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ -n "${{ steps.latest_tags.outputs.latest_tag }}" ]]; then
            echo "- \`${{ steps.latest_tags.outputs.latest_tag }}\`" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Seed0 image tags:" >> $GITHUB_STEP_SUMMARY
          
          echo "- \`${{ steps.sha_tags.outputs.sha_seed0_tag }}\`" >> $GITHUB_STEP_SUMMARY
          
          if [[ -n "${{ steps.version_tags.outputs.version_seed0_tag }}" ]]; then
            echo "- \`${{ steps.version_tags.outputs.version_seed0_tag }}\`" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ -n "${{ steps.latest_tags.outputs.latest_seed0_tag }}" ]]; then
            echo "- \`${{ steps.latest_tags.outputs.latest_seed0_tag }}\`" >> $GITHUB_STEP_SUMMARY
          fi