name: Build and Test

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load common configuration
        id: config
        uses: ./.github/actions/load-config

      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep -E '^version = "[0-9]+\.[0-9]+\.[0-9]+"$' crates/starknet-devnet/Cargo.toml | head -n 1 | cut -d'"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Rust stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ steps.config.outputs.rust_stable_version }}
          components: clippy, rustfmt

      - name: Set up Rust nightly
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ steps.config.outputs.rust_nightly_version }}
          components: rustfmt

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2.5.0
        with:
          cache-on-failure: true
          shared-key: "main-build"

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1.1.0
        with:
          version: nightly-5b7e4cb3c882b28f3c32ba580de27ce7381f415a

      - name: Verify lockfile
        run: cargo update -w --locked

      - name: Run cargo check
        run: cargo check --workspace --all-targets

      - name: Run clippy check
        run: ./scripts/clippy_check.sh

      - name: Check code formatting
        run: ./scripts/format_check.sh

      - name: Check spelling
        run: ./scripts/check_spelling.sh

      - name: Build in release mode
        run: cargo build --release

      - name: Run tests
        run: RUST_BACKTRACE=full cargo test --no-fail-fast