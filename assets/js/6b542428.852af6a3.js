"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7116],{7638:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var i=t(4848),r=t(8453);const s={},o="Server config",c={id:"server-config",title:"Server config",description:"To read generally about ways to configure your Devnet instance, check out the CLI section.",source:"@site/versioned_docs/version-0.5.1/server-config.md",sourceDirName:".",slug:"/server-config",permalink:"/starknet-devnet/docs/server-config",draft:!1,unlisted:!1,editUrl:"https://github.com/0xSpaceShard/starknet-devnet/blob/master/website/versioned_docs/version-0.5.1/server-config.md",tags:[],version:"0.5.1",frontMatter:{},sidebar:"docSidebar",previous:{title:"Restrictive mode",permalink:"/starknet-devnet/docs/restrictive"},next:{title:"Starknet time",permalink:"/starknet-devnet/docs/starknet-time"}},d={},l=[{value:"Host and port",id:"host-and-port",level:2},{value:"Logging",id:"logging",level:2},{value:"Timeout",id:"timeout",level:2},{value:"Request size limit",id:"request-size-limit",level:2},{value:"API",id:"api",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"server-config",children:"Server config"}),"\n",(0,i.jsxs)(n.p,{children:["To read generally about ways to configure your Devnet instance, check out the ",(0,i.jsx)(n.a,{href:"/starknet-devnet/docs/running/cli",children:"CLI section"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"host-and-port",children:"Host and port"}),"\n",(0,i.jsxs)(n.p,{children:["Specify the host and the port used by the server with ",(0,i.jsx)(n.code,{children:"--host <ADDRESS>"})," and ",(0,i.jsx)(n.code,{children:"--port <NUMBER>"})," CLI arguments. If running with Docker, check out the ",(0,i.jsx)(n.a,{href:"./running/docker#container-port-publishing",children:"port publishing docs"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"logging",children:"Logging"}),"\n",(0,i.jsxs)(n.p,{children:["By default, the logging level is ",(0,i.jsx)(n.code,{children:"INFO"}),", but this can be changed via the ",(0,i.jsx)(n.code,{children:"RUST_LOG"})," environment variable."]}),"\n",(0,i.jsxs)(n.p,{children:["All logging levels: ",(0,i.jsx)(n.code,{children:"TRACE"}),", ",(0,i.jsx)(n.code,{children:"DEBUG"}),", ",(0,i.jsx)(n.code,{children:"INFO"}),", ",(0,i.jsx)(n.code,{children:"WARN"}),", ",(0,i.jsx)(n.code,{children:"ERROR"})]}),"\n",(0,i.jsx)(n.p,{children:"To specify the logging level and run Devnet on the same line:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ RUST_LOG=<LEVEL> starknet-devnet\n"})}),"\n",(0,i.jsx)(n.p,{children:"or if using dockerized Devnet:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ docker run -e RUST_LOG=<LEVEL> shardlabs/starknet-devnet-rs\n"})}),"\n",(0,i.jsxs)(n.p,{children:["By default, logging of request and response data is turned off.\nTo see the request and/or response body, additional levels can be specified via the ",(0,i.jsx)(n.code,{children:"RUST_LOG"})," environment variable: ",(0,i.jsx)(n.code,{children:"REQUEST"})," for request body, ",(0,i.jsx)(n.code,{children:"RESPONSE"})," for response body."]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["Logging request and response requires at least logging level ",(0,i.jsx)(n.code,{children:"INFO"}),"."]}),(0,i.jsxs)(n.p,{children:["For example, the following two commands will log request and response data with log level ",(0,i.jsx)(n.code,{children:"INFO"}),"."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'$ RUST_LOG="REQUEST,RESPONSE" starknet-devnet\n'})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'$ RUST_LOG="REQUEST,RESPONSE,INFO" starknet-devnet\n'})})]}),"\n",(0,i.jsx)(n.h2,{id:"timeout",children:"Timeout"}),"\n",(0,i.jsx)(n.p,{children:"Specify the maximum amount of time an HTTP request can be served. This makes it possible to deploy and manage large contracts that take longer to execute."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ starknet-devnet --timeout <SECONDS>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"request-size-limit",children:"Request size limit"}),"\n",(0,i.jsxs)(n.p,{children:["There is no HTTP request size limit, but take care when declaring large classes! Devnet is supposed to follow the limits specified in ",(0,i.jsx)(n.a,{href:"https://docs.starknet.io/resources/chain-info/#current_limits",children:"Starknet Chain Info"}),". So the current upper limits configured in Devnet are:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"contract class size: 4089446 bytes"}),"\n",(0,i.jsx)(n.li,{children:"contract bytecode size: 81920 felts"}),"\n",(0,i.jsx)(n.li,{children:"Sierra length: 80000 felts"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,i.jsxs)(n.p,{children:["Retrieve the server config by sending a ",(0,i.jsx)(n.code,{children:"GET"})," request to ",(0,i.jsx)(n.code,{children:"/config"})," or ",(0,i.jsx)(n.code,{children:"JSON-RPC"})," request with method name ",(0,i.jsx)(n.code,{children:"devnet_getConfig"})," and extracting its ",(0,i.jsx)(n.code,{children:"server_config"})," property."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ curl localhost:5050/config | jq .server_config\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'JSON-RPC\n{\n    "jsonrpc": "2.0",\n    "id": "1",\n    "method": "devnet_getConfig"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);